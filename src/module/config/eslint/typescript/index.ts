import { prettier } from '../../prettier';

const base = {
  env: {
    browser: true,
    es2022: true,
    jest: true,
    node: true,
    mongo: true,
  },
  plugins: ['@typescript-eslint', 'import', 'prettier'],
  extends: ['airbnb-base', 'airbnb-typescript/base', 'prettier'],
  parser: '@typescript-eslint/parser',
  settings: {
    'import/resolver': {
      typescript: {},
    },
  },
  rules: {
    '@typescript-eslint/explicit-function-return-type': ['error', { allowExpressions: true }],
    '@typescript-eslint/no-empty-function': 'error',
    '@typescript-eslint/no-empty-interface': 'error',
    '@typescript-eslint/no-for-in-array': 'error',
    '@typescript-eslint/no-unused-vars': 'error',
    '@typescript-eslint/no-var-requires': 'error',
    'class-methods-use-this': 'error',
    'constructor-super': 'error',
    eqeqeq: ['error', 'always'],
    'import/named': 'error',
    'import/no-extraneous-dependencies': [
      'error',
      {
        devDependencies: [
          '**/*.e2e-spec.ts',
          '**/*.spec.ts',
          '.commitlintrc.js',
          '.eslintrc.js',
          '.lint-staged.js',
          '.nano-staged.js',
          '.prettierrc.js',
          '.release-it.js',
        ],
      },
    ],
    'import/order': 'error',
    'import/prefer-default-export': 'off',
    'line-comment-position': ['error', { position: 'above' }],
    'logical-assignment-operators': 'error',
    'max-classes-per-file': ['error', 1],
    'max-statements-per-line': ['error', { max: 1 }],
    'newline-per-chained-call': 'error',
    'no-alert': 'error',
    'no-async-promise-executor': 'error',
    'no-cond-assign': 'error',
    'no-console': 'error',
    'no-const-assign': 'error',
    'no-constructor-return': 'error',
    'no-dupe-class-members': 'error',
    'no-dupe-else-if': 'error',
    'no-dupe-keys': 'error',
    'no-duplicate-case': 'error',
    'no-duplicate-imports': 'error',
    'no-empty-character-class': 'error',
    'no-empty-function': ['error', { allow: ['constructors'] }],
    'no-eq-null': 'error',
    'no-eval': 'error',
    'no-import-assign': 'error',
    'no-inline-comments': 'error',
    'no-labels': 'error',
    'no-lone-blocks': 'error',
    'no-lonely-if': 'error',
    'no-mixed-spaces-and-tabs': 'error',
    'no-multiple-empty-lines': 'error',
    'no-negated-condition': 'error',
    'no-new': 'error',
    'no-new-object': 'error',
    'no-octal': 'error',
    'no-octal-escape': 'error',
    'no-param-reassign': 'error',
    'no-plusplus': 'error',
    'no-redeclare': 'error',
    'no-restricted-syntax': 'error',
    'no-return-await': 'error',
    'no-self-assign': 'error',
    'no-self-compare': 'error',
    'no-throw-literal': 'error',
    'no-trailing-spaces': 'error',
    'no-underscore-dangle': 'error',
    'no-unreachable': 'error',
    'no-unsafe-negation': 'error',
    'no-unused-labels': 'error',
    'no-unused-private-class-members': 'error',
    'no-unused-vars': 'off',
    'no-useless-catch': 'error',
    'no-useless-rename': 'error',
    'no-useless-return': 'error',
    'no-var': 'error',
    'no-whitespace-before-property': 'error',
    'object-shorthand': ['error', 'always'],
    'operator-assignment': ['error', 'always'],
    'padding-line-between-statements': [
      'error',
      { blankLine: 'always', prev: ['case', 'default'], next: '*' },
      { blankLine: 'always', prev: '*', next: 'return' },
    ],
    'prefer-arrow-callback': ['error', { allowNamedFunctions: false, allowUnboundThis: true }],
    'prefer-const': 'error',
    'prefer-template': 'error',
    'prettier/prettier': ['error', prettier],
    quotes: ['error', 'single', { avoidEscape: true }],
    'semi-style': ['error', 'last'],
    'use-isnan': 'error',
    'valid-typeof': ['error', { requireStringLiterals: true }],
    'wrap-regex': 'error',
  },
  ignorePatterns: ['**/node_modules/**/*', '**/dist/*', '**/build/*', 'yarn.local', '.yarn/*', 'package-lock.json'],
};

export const typescript = { ...base };
